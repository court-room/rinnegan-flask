name: test

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master
      - staging

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pipenv
          pipenv lock --dev --requirements > ./requirements.txt
          pip install --requirement requirements.txt

      - name: Run black
        run: |
          black \
          --check \
          --config pyproject.toml \
          .

      - name: Run flake8
        run: |
          flake8 \
          --config setup.cfg \
          .

      - name: Run isort
        run: |
          isort \
            --atomic \
            --case-sensitive \
            --check-only \
            --force-alphabetical-sort-within-sections \
            --force-single-line-imports \
            --lines-after-imports 2 \
            --lines-between-types 1 \
            --line-width 79 \
            --skip-glob "migrations/*" \
            .

  # test:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install pipenv
  #         pipenv lock --dev --requirements > ./requirements.txt
  #         pip install --requirement requirements.txt

  #     - name: Run unit tests
  #       env:
  #         SECRET_KEY_FILE: NOT_SO_SECRET_KEY_FOR_TEST
  #         DATABASE_URL_FILE: DUMMY_DATABASE_URL
  #         DATABASE_TEST_URL_FILE: DUMMY_DATABASE_TEST_URL
  #         REDIS_URL_FILE: DUMMY_REDIS_URL
  #       run: |
  #         pytest -c tests/pytest.ini

  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
